/**
 * Database schema for electron-store
 * Using JSON-based storage instead of SQLite
 */

export interface DatabaseSchema {
  videos: VideoRecord[];
  downloads: DownloadRecord[];
  subtitles: SubtitleRecord[];
  preferences: UserPreferences;
  compressionPresets: CompressionPreset[];
  processingQueue: ProcessingQueueItem[];
}

export interface VideoRecord {
  id: string;
  url: string;
  title: string;
  duration: number;
  thumbnail: string;
  author: string;
  metadata: Record<string, unknown>;
  createdAt: string;
  updatedAt: string;
}

export interface DownloadRecord {
  id: string;
  videoId: string;
  status: 'pending' | 'downloading' | 'paused' | 'completed' | 'failed';
  progress: number;
  downloadedBytes: number;
  totalBytes: number;
  resumeData?: string;
  outputPath: string;
  error?: string;
  startedAt: string;
  completedAt?: string;
}

export interface SubtitleRecord {
  id: string;
  videoId: string;
  language: string;
  languageName: string;
  format: 'srt' | 'vtt' | 'ass';
  content: string;
  isAutoGenerated: boolean;
  createdAt: string;
}

export interface UserPreferences {
  defaultOutputPath: string;
  defaultQuality: string;
  defaultFormat: string;
  autoGenerateSubtitles: boolean;
  theme: 'light' | 'dark' | 'system';
  language: string;
  defaultSubtitleLanguages: string[];
  maxConcurrentDownloads: number;
  proxySettings?: {
    enabled: boolean;
    type: 'http' | 'https' | 'socks5';
    host: string;
    port: number;
    username?: string;
    password?: string;
  };
}

export interface CompressionPreset {
  id: string;
  name: string;
  config: {
    format: string;
    resolution: string;
    videoBitrate?: number;
    audioBitrate?: number;
    preset?: string;
    crf?: number;
  };
  isDefault: boolean;
  createdAt: string;
  updatedAt: string;
}

export interface ProcessingQueueItem {
  id: string;
  type: 'subtitle_generation' | 'subtitle_embedding' | 'video_compression';
  status: 'pending' | 'processing' | 'completed' | 'failed';
  priority: number;
  inputFile: string;
  outputFile?: string;
  config?: Record<string, unknown>;
  progress: number;
  startedAt?: string;
  completedAt?: string;
  error?: string;
}

// Default database values
export const defaultDatabase: DatabaseSchema = {
  videos: [],
  downloads: [],
  subtitles: [],
  preferences: {
    defaultOutputPath: '',
    defaultQuality: '720p',
    defaultFormat: 'mp4',
    autoGenerateSubtitles: false,
    theme: 'system',
    language: 'zh-CN',
    defaultSubtitleLanguages: ['zh-CN', 'en'],
    maxConcurrentDownloads: 1
  },
  compressionPresets: [
    {
      id: 'default-high',
      name: '高质量',
      config: {
        format: 'mp4',
        resolution: '1080p',
        preset: 'slow',
        crf: 18
      },
      isDefault: false,
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString()
    },
    {
      id: 'default-medium',
      name: '标准质量',
      config: {
        format: 'mp4',
        resolution: '720p',
        preset: 'medium',
        crf: 23
      },
      isDefault: true,
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString()
    },
    {
      id: 'default-low',
      name: '压缩优先',
      config: {
        format: 'mp4',
        resolution: '480p',
        preset: 'fast',
        crf: 28
      },
      isDefault: false,
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString()
    }
  ],
  processingQueue: []
};